language: php
sudo: false
cache:
  directories:
    - $HOME/.composer/cache
    - $HOME/.php-cs-fixer
    - $HOME/.local

env:
  global:
    - EXECUTE_CS_CHECK=false
    - TEST_COVERAGE=false
    - PHPUNIT_FLAGS="-v"
    - $HOME/.php-cs-fixer

matrix:
  fast_finish: true
  include:
    # Minimum supported dependencies with the latest and oldest PHP version
    - php: 7.2
      env: COMPOSER_FLAGS="--prefer-stable --prefer-lowest" SYMFONY_DEPRECATIONS_HELPER="weak_vendors"
    - php: 7.1
      env: COMPOSER_FLAGS="--prefer-stable --prefer-lowest" SYMFONY_DEPRECATIONS_HELPER="weak_vendors"

      # Test the latest stable release
    - php: 7.1
    - php: 7.2
      env: TEST_COVERAGE=true EXECUTE_CS_CHECK=true PHPUNIT_FLAGS="-v --coverage-text"

      # Test LTS versions. This makes sure we do not use Symfony packages with version greater
      # than 2 or 3 respectively. Read more at https://github.com/symfony/lts
    - php: 7.2
      env: DEPENDENCIES="symfony/lts:^3"

      # Latest commit to master
    - php: 7.2
      env: STABILITY="dev"

  allow_failures:
      # Dev-master is allowed to fail.
    - env: STABILITY="dev"

before_install:
  - if [[ $TEST_COVERAGE != true ]]; then phpenv config-rm xdebug.ini || true; fi
  - if ! [ -z "$STABILITY" ]; then composer config minimum-stability ${STABILITY}; fi;
  - if ! [ -v "$DEPENDENCIES" ]; then composer require --no-update ${DEPENDENCIES}; fi;

install:
  # To be removed when this issue will be resolved: https://github.com/composer/composer/issues/5355
  - if [[ "$COMPOSER_FLAGS" == *"--prefer-lowest"* ]]; then composer update --prefer-dist --no-interaction --prefer-stable --quiet; fi
  - composer update ${COMPOSER_FLAGS} --prefer-dist --no-interaction

before_script:
  - if [[ $EXECUTE_CS_CHECK == 'true' ]]; then mkdir -p "$HOME/.php-cs-fixer" ; fi

script:
  - composer validate --strict --no-check-lock
  - if [[ $TEST_COVERAGE == 'true' ]]; then php -dzend_extension=xdebug.so ./vendor/bin/phpunit --coverage-text --coverage-clover ./build/logs/clover.xml; else ./vendor/bin/phpunit; fi
  - if [[ $EXECUTE_CS_CHECK == 'true' ]]; then ./vendor/bin/php-cs-fixer fix -v --diff --dry-run; fi

after_script:
  - if [[ $TEST_COVERAGE == 'true' ]]; then php vendor/bin/coveralls -v; fi
